using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
// added L20
using myNamespace;
// added L36 for StreamReader
using System.IO;
// added L63
using System.Diagnostics;
// added L69
using System.Threading;



namespace theNewBoston_Beginner_Tutorial_C_sharp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        // L70 set up Thread variable global
        Thread tWrite;

        // L70 empty string to fix Thread debug error
        string sThreadFix = "";

        private void button1_Click(object sender, EventArgs e)
        {
            
            {
             
                // L70 using global Thread
                tWrite = new Thread(Write);

                // L70 invoke (start) Freeze method
                tWrite.Start();

                // while, to wait for the for statement thread is complete before displaying output in textBox1
                while (tWrite.IsAlive) ;
                    textBox1.Text += sThreadFix;
            }

            // L70 function that loops 1000 times
            void Write()
            {
                // L70 for loop method from 0 to 1000
                for (int i = 0; i < 1000; i++)

                    // L70 display text in textbox1 up to 1000 return and newline
                    sThreadFix += "Roddy: " +  i.ToString() + "\r\n";
            }
            button2.Enabled = true;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            label1.Text = "";
            textBox1.Clear();
            button1.Enabled=true;
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            tWrite.Abort();
        }
    }
}
