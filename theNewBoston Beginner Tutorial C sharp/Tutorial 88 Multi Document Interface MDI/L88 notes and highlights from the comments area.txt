For this lesson we will need 3 buttons in form 1, to work with the Mdi, Multi Documents interface.  The Mdi class, is used 
to put a Windows form within the borders of another Windows form.  We can also put many windows forms, inside of a form.
To set this up, in button1, we will first let the compiler know that we are going to put a form within this form (form1).
We will use the keyword 'this' which in this circumstance refferences the form1 class, since that is where 'this' is; located
in the form1, button1 code.

		private void button1_Click(object sender, EventArgs e)
        {
            // L88 inform the compiler a form will be contained within form1
            this.IsMdiContainer = true;
        }



Next we will create an new form;  the one that will be contained form1.  We will name it form2, and created it using the same
methodology as when we create an instance.  Then we will let the compiler know that form2's parent is form1 (this).  And
lastly will enable form2 to show itself when button1 is clicked.  ShowDialog() will not work, because you wouldn't be able
to close it.

 private void button1_Click(object sender, EventArgs e)
        {
            // L88 inform the compiler a form will be contained within form1
            this.IsMdiContainer = true;

            // L88 create the new form that will reside within form1
            Form Iform2 = new Form();

            // L88 form2 resides within parent, form1
            Iform2.MdiParent = this;
			
			// shows form2 inside of form1, ShowDialog() will not work
            Iform2.Show();
        }


When you run debug, you will notice form1 is greyed out, and form2 will expand form1's side bars, when you drag form2 
past the borders of form1.
Lets say you want more forms within form 1.  We will just copy what we did in button1 to button2, and create more forms, using 
the same methods.  Notice we only let the compiler, that we are putting forms within form1



private void button2_Click(object sender, EventArgs e)
        {
			// reset i in button3 for statement, to 0
            i = 0;

            // L88 inform the compiler a form will be contained within form1
            this.IsMdiContainer = true;

            // L88 create the new form that will reside within form1
            Form Iform2 = new Form();

            // L88 form2 resides within parent, form1
            Iform2.MdiParent = this;

            // shows form2 inside of form1, ShowDialog() will not work
            Iform2.Show();
            

            // L88 create the new form that will reside within form1
            Form Iform3 = new Form();

            // L88 form2 resides within parent, form1
            Iform3.MdiParent = this;

            // shows form2 inside of form1, ShowDialog() will not work
            Iform3.Show();

            // L88 create the new form that will reside within form1
            Form Iform4 = new Form();

            // L88 form2 resides within parent, form1
            Iform4.MdiParent = this;

            // shows form2 inside of form1, ShowDialog() will not work
            Iform4.Show();
        }



We will use button3, to arange the forms we created in button2, to place their minimized icons, in a row, or start the
forms, a bit larger, or even arrange the form horiizontally or vertically.


		int i;
        private void button3_Click(object sender, EventArgs e)
        {
            // L88 see the 4 mdiLayout types, one after another
            for (i = 0; i < 4; i++)
            {
                if (i == 0)
                {
                    this.LayoutMdi(MdiLayout.ArrangeIcons);
                }
                if (i == 1)
                {
                    this.LayoutMdi(MdiLayout.Cascade);
                }
                if (i == 2)
                {
                    this.LayoutMdi(MdiLayout.TileHorizontal);
                }
                if (i == 3)
                {
                    this.LayoutMdi(MdiLayout.TileVertical);
                }
				// pauses the for statement between each mdiLayout and lets you know the number you're on
                MessageBox.Show("i = " + i);                
            }
        }



******************** NO higlights from the comments area ***********************
