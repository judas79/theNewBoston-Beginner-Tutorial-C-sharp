For this lesson we will need button1 to learn more about the Directory class.  We will need and instance for  FolderBrowserDialog and
a way to check if the path was correctly implimented and a folder chosen to be opened, from the previous tutorial.  also make sure you
have using System.IO; in your form1.cs, to access namespace for accessing folders.


			// L56 instance of FolderBrowserDialog
            FolderBrowserDialog IFBD = new FolderBrowserDialog();

            // L56 check 'if' the instance makes the path
            if (IFBD.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                MessageBox.Show("IFBD Functional, folder selected");
			}


Forst we will use the Directory class to create a folder, with a name designation.  We will be using IFBD.ShowDialog() to select a 
folder, as we did in the previous tutotials, and create a folder within it using	 and then adding + the name you want to call your
new folder.  Note, while using a / for creation of the sub-directory, you actually need two  slashes //, because the compiler will read
one / as an omit next character as a character, as to use double quoates.


				// L59 create a folder, , messagebox title
                Directory.CreateDirectory(IFBD.SelectedPath + "//New Sub Folder");

                // NOT IN LESSON, lets you know you created a folder
                //MessageBox.Show(Directory.CreateDirectory(IFBD.SelectedPath + "//New Sub Folder").ToString(), "Folder");


Next we will move a folder, that we will choose using, IFBD.SelectedPath, into another folder (directory), and give that moved folder,
a new name, using Move.  Don't use this move method, at the same time as the lesson before it 'create folder' it caused an error.


				// L59 select folder move and rename
                Directory.Move(IFBD.SelectedPath, "C:\\Users\\Roddy\\OneDrive\\Documents\\VS Test folder\\New Sub Folder\\New Sub Folder2");
            
				// NOT IN LESSON try vebatim @ instead of using double backslashes in file path strings
                //Directory.Move(IFBD.SelectedPath, @"C:\Users\Roddy\OneDrive\Documents\VS Test folder\New Sub Folder\New Sub Folder2");


Next we will select a folder to be targeted and deleted.

				// L59 delete selected folder
                Directory.Delete(IFBD.SelectedPath);




********************* highlights from the comments area ********************






when working with filepaths,just put @ in front of your String.
It is called a verbatim String and makes it, so you don't have to type \\, but \




When we try to Move from a volume to another we have the following, "Source and destination path must have identical roots. Move will 
not work across volumes."

But I think that we can overcome this solution by using the File.Copy and copy file each file in the directory to another created 
directory

Then delete the Directory. 