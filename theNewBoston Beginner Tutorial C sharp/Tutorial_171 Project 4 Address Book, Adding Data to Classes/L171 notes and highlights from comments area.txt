/*
We will continue with the Address Book project.  In the last lesson we created the UI for our project, a class named people and filled it with
a bunch of properties about its members.  In this lesson we will be Adding Data to Classes, in our Address Book.  But first, NOT in the lesson,
go to your form1CS [Design] and click the black triangle in your listView1.  Then click the Edit tab and choose 'List'.  This will make your 
look like the tutorials.  Double click on the 'add contacts' button to go to the code area.
*/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
// to use Directory for creation of folder
using System.IO;

namespace theNewBoston_Beginner_Tutorial_C_sharp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void groupBox2_Enter(object sender, EventArgs e)
        {

        }

        // L170 class Person, with public string get and set properties
        class Person
            {
            public string Name
            {
                get;
                set;
            }
            public string Email
            {
                get;
                set;
            }
            public string StreetAddress
            {
                get;
                set;
            }
            public string Phone
            {
                get;
                set;
            }
            // L170 date time picker type birthday
            public DateTimePicker Birthday
            {
                get;
                set;
            }
            public string AdditionalNotes
            {
                get;
                set;
            }
        }

        // L170 create a folder if one hasn't already been created, create a xml file in that folder     
        private void Form1_Load(object sender, EventArgs e)
        {
            // L170 string to hold folder path for app data
            string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);

            // L170 check to see if AddressBook - Rody already exists in this file path
            if (!Directory.Exists(path + "\\AddressBook - Roddy"))
            {
                // L170 create directory (folder) in our app data, path then directory name we choose to give it
                Directory.CreateDirectory(path + "\\AddressBook - Roddy");
            }
            // L170 create a xml file in the directory, above, if one hasn't already been created
            if (!File.Exists(path + "\\AddressBook - Roddy\\Settings"))
            {
                File.Create(path + "\\AddressBook - Roddy\\settings.xml");
            }
        }
    

/*
First we will go to the top area of our form1, and add a list to hold the information about the people in the Person class, in our address book.
*/

        // L171 list hold data about people in class Person
        List<Person> people = new List<Person>();



/*
Next, we will create an instance of the Person class, and name it Ip, inside of our button2_click which is our Add_Contact button.  Next we will
need to set all those properties we made in our Person Class.  We will set the property name equal to the contents of the coressponding textbox
next to it in our form1cs[Design].
We use our dateTimePicker1 to get the value for Birthday.
Then add thos people properties to our Person classes 'List' using the Person instance Ip.
We will also want to add the contacts Item Name, to our listView1 items.
*/

		private void button2_Click(object sender, EventArgs e)
        {
            // L171 instance name of Person class
            Person Ip = new Person();

            // L171 set property to corresponding textboxs' value, that is next to it in our address book
            Ip.Name = textBox1.Text;
            Ip.Email = textBox2.Text;
            Ip.StreetAddress = textBox3.Text.ToString();
            Ip.Phone = textBox3.Text.ToString();
            Ip.Birthday = dateTimePicker1;
            Ip.AdditionalNotes = textBox4.Text.ToString();

            // L171 add people to our class People list
            people.Add(Ip);

            // L171 add entered items Name to our listView1.
            listView1.Items.Add(Ip.Name);
        

/*
Last, we will want to clear all the textboxes and ewset the dateTimePicker, back to its default, which is now, in the button2, add contacts
button code area.
*/




// L171 add entered items Name to our listView1.
            listView1.Items.Add(Ip.Name);

            // L171 clear all the textBoxes
            textBox1.Text = "";
            textBox2.Text = "";
            textBox3.Text = "";
            textBox4.Text = "";
            textBox5.Text = "";

            // L171 reset dateTimePicker to now
            dateTimePicker1.Value = DateTime.Now;
        }
    }
}





/******************************* highlights from the comments area ***********************************/






Hi! I'd be very grateful if somebody would like to explain how to make First name and Last name to be displayed in textBox combined, I made 
separated textBox for First name and Last name.
I have tried this, but it didn't work: listView1.Items.Add(p.FirstName,p.LastName);




 its doing that to everybody, just go to Form Editor, click arrow above listView1, change "View:" to "List".
And for no OutOfRangeExceptions :" if (listView1.SelectedItems.Count == 0) return; " above your " textBox1.Text = people[listView1.SelectedItems­[0].Index].Name; " line.