using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;
using System.IO;

namespace theNewBoston_Beginner_Tutorial_C_sharp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        // L111 make xmlDocument document
        XmlDocument Ixmld;

        // L112 make Iofd global to form1
        OpenFileDialog Iofd;

        string Spath;
        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                // L109 open file dialog to select xml file
                Iofd = new OpenFileDialog();

                // L109 filter to only open xml file
                Iofd.Filter = "XML|*.xml";
                if (Iofd.ShowDialog() == DialogResult.OK)
                {
                    // L111 set path equal to openFialogs' path
                    Spath = Iofd.FileName;

                    // L111 make instance of our document, xmlDocument class
                    Ixmld = new XmlDocument();

                    // L111 use load method to open, passed in, filename or url
                    Ixmld.Load(Spath);

                    // L110 read the contents of a single line in the file
                    // the path to name is "People/Person/name, diplayed in textBox1
                    textBox1.Text = Ixmld.SelectSingleNode("People/Person/Name").InnerText;

                    // L110 path to age, displayed in numericalUpDown box
                    numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText;

                    // L110 the path to Email is "People/Person/name, diplayed in textBox2
                    textBox2.Text = Ixmld.SelectSingleNode("People/Person/Email").InnerText;


//****************************** For saving file without overwriting ane existing file ****************************


                    // NOT in lesson Get direcory path opened using Iofd (open file dialog) 
                    string Sdirpath = Path.GetDirectoryName(Spath);

                    // Put all xml files and paths, in the opened directory into array.
                    // ... This is case-insensitive, yes it needs the empty "" after the @
                    string[] array1 = Directory.GetFiles(@"" + Sdirpath, "*.XML");
                    string Sflnm = Iofd.SafeFileName;
                    // Display all XML files in opened directory
                    // to verify filename is different when saving it.
                    richTextBox1.Text +=("--- XML Files: ---\r\n");
                    foreach (string name in array1)
                    {
                        string SnameOnly = Path.GetFileName(name);
                        richTextBox1.Text +=(SnameOnly + "\r\n");
                        if (SnameOnly == Sflnm)
                        {
                            // not in lesson; displays,  yes/no messagebox overwrite existing filename 
                            // or change the name to...?
                            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
                            DialogResult result = MessageBox.Show(SnameOnly + " already exists overwrite it?" + "\r\nor\r\nchange name to? new_" + Sflnm, "SAVE", buttons);
                            if (result == DialogResult.Yes)
                            {
                                // overwrite the file name
                            }
                            else
                            {
                                // modify the file name and save
                            }
                        }
                    }
                    // NOT in lesson, write name of open file to richTextbox1
                    richTextBox1.Text += ("\r\n--- Opened File: ---\r\n");                 
                    richTextBox1.Text += (Sflnm);
                }
            }
            catch (Exception)
            {
                MessageBox.Show("an error has occured");
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            // L111 set our three properties up to save them
            Ixmld.SelectSingleNode("People/Person/Name").InnerText = textBox1.Text;

            // L111 numericUpDown is a decinal and must be set to string for saving
            Ixmld.SelectSingleNode("People/Person/Age").InnerText = numericUpDown1.Text.ToString();

            Ixmld.SelectSingleNode("People/Person/Email").InnerText = textBox2.Text;

            if (File.Exists(Directory.GetCurrentDirectory() + @"\" + Spath))
            {
                MessageBox.Show("new" + iNameNum.ToString() + ".xml");
                iNameNum++;
            }

            // L111 save method, dependency is the path to the file
            Ixmld.Save(Spath);

            /* not in lesson, show saved items in message box
            MessageBox.Show((Ixmld.SelectSingleNode("People/Person/Name").InnerText) + "\r\n" +
                (numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText) + "\r\n" + 
                (Ixmld.SelectSingleNode("People/Person/Email").InnerText = textBox2.Text) + "\r\n", "SAVED");

            */
            // not in lesson; displays items saved,  yes/no messagebox continue program or close?
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            DialogResult result = MessageBox.Show((Ixmld.SelectSingleNode("People/Person/Name").InnerText) + "\r\n" +
                (numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText) + "\r\n" +
                (Ixmld.SelectSingleNode("People/Person/Email").InnerText = textBox2.Text) + "\r\n\r\nClose the Program?", "SAVED", buttons);
            if (result == DialogResult.Yes)
            {
                this.Close();
            }
            else
            {
                // Do nothing  
            }
        }

        // not in lesson; add a numeric value to default name of created xml file
        int iNameNum = 0;
        private void button3_Click(object sender, EventArgs e)
        {
            // L112 instance of xmlWriter, pass in test xml file path
            XmlTextWriter IxmlTxtWrtr = new XmlTextWriter("C:\\Users\\Roddy\\Documents\\VS Test folder\\new" +iNameNum.ToString() + ".xml", Encoding.UTF8);

            // L112 format our xml so elements are on separate lines
            IxmlTxtWrtr.Formatting = Formatting.Indented;

            // L112 write the start element using the instance we created, first element in our xml tree
            IxmlTxtWrtr.WriteStartElement("People");

            // L112 write the second start element using the instance we created, second element in our xml tree
            IxmlTxtWrtr.WriteStartElement("Person");

            // L112 write the next start element using the instance we created, third element in our xml tree
            IxmlTxtWrtr.WriteStartElement("Name");

            // L112 write the data in the Name element to string and display in textobox1 (the name field)
            IxmlTxtWrtr.WriteString(textBox1.Text);

            // L112 close off string write <name><Person><People?, by ending all of them
            IxmlTxtWrtr.WriteEndElement(); // closes Name

            // L112 write the Age start element, write text to it from numericalUpDown1, close age
            IxmlTxtWrtr.WriteStartElement("Age");
            IxmlTxtWrtr.WriteString(numericUpDown1.Value.ToString());
            IxmlTxtWrtr.WriteEndElement(); // closes Age

            // L112 write the Email start element, write text to it from textBox2, close Email
            IxmlTxtWrtr.WriteStartElement("Email");
            IxmlTxtWrtr.WriteString(textBox2.Text);
            IxmlTxtWrtr.WriteEndElement(); // closes Email

            // L112 close off string write <Person><People?, by ending all of them
            IxmlTxtWrtr.WriteEndElement(); // closes Person
            IxmlTxtWrtr.WriteEndElement(); // closes People

            // L112 close our instance of the xml writer
            IxmlTxtWrtr.Close();

            // not in lesson; displays items saved,  yes/no messagebox continue program or close?
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            DialogResult result = MessageBox.Show( "file new" + iNameNum.ToString() + ".xml\r\n\r\nClose the Program?", "Created", buttons);
            if (result == DialogResult.Yes)
            {
                // close our app
                this.Close();
            }
            else
            {
                // increment created xml doc name by 1
                iNameNum++;
                textBox1.Text = "";
                numericUpDown1.Value = 0;
                textBox2.Text = "";
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            try
            {
                // L109 open file dialog to select xml file
                Iofd = new OpenFileDialog();

                // L109 filter to only open xml file
                Iofd.Filter = "XML|*.xml";
                if (Iofd.ShowDialog() == DialogResult.OK)
                {
                    // L111 set path equal to openFialogs' path
                    Spath = Iofd.FileName;

                    // L111 make instance of our document, xmlDocument class
                    Ixmld = new XmlDocument();

                    // L111 us load method to open, passed in, filename or url
                    Ixmld.Load(Spath);

                    // NOT in lesson, read only, display selected file in richText box
                    richTextBox1.Text = File.ReadAllText(Spath);

                    // L110 read the contents of a single line in the file
                    // the path to name is "People/Person/name, diplayed in textBox1
                    textBox1.Text = Ixmld.SelectSingleNode("People/Person/Name").InnerText;

                    // L110 path to age, displayed in numericalUpDown box
                    numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText;

                    // the path to Email is "People/Person/name, diplayed in textBox2
                    textBox2.Text = Ixmld.SelectSingleNode("People/Person/Email").InnerText;

                }
            }
            catch (Exception)
            {
                MessageBox.Show("an error has occured");
            }
        }

        private void richTextBox1_TextChanged(object sender, EventArgs e)
        {

        }

        // ************************** Add elements to XML Doc***************************

        private void button5_Click(object sender, EventArgs e)
        {
            // L113 add new xml document for adding new nodes
            XmlDocument xAddNwNd = new XmlDocument();

            // L113 open existing xml file from selected directory
            xAddNwNd.Load(Spath);

            // L113 create begining of new element in xAddNwNd and give it a name "Person"
            XmlNode person = xAddNwNd.CreateElement("Person");

            //************************* <Name> element> ***************************
            // L113 create begining of new element in xAddNwNd and give it a name "Name"
            XmlNode name = xAddNwNd.CreateElement("Name");

            // L113 set name entered in textbox1 as the innertext of our <name> element
            name.InnerText = textBox1.Text;

            // L113 make element name a child of element People, so compiler knows where to place it
            person.AppendChild(name);

            //************************* <Age> element> ***************************
            // L113 create begining of new element in xAddNwNd and give it a name "Name"
            XmlNode age = xAddNwNd.CreateElement("Age");

            // L113 set name entered in textbox1 as the innertext of our <name> element
            age.InnerText = numericUpDown1.Text;

            // L113 make element name a child of element People, so compiler knows where to place it
            person.AppendChild(age);

            //************************* <Email> element> ***************************
            // L113 create begining of new element in xAddNwNd and give it a name "Name"
            XmlNode email = xAddNwNd.CreateElement("Email");

            // L113 set name entered in textbox1 as the innertext of our <name> element
            email.InnerText = textBox2.Text;

            // L113 make element name a child of element People, so compiler knows where to place it
            person.AppendChild(email);

            //************************* <Address> element> ***************************
            // L113 create begining of new element in xAddNwNd and give it a name "Name"
            XmlNode address = xAddNwNd.CreateElement("Address");

            // L113 set name entered in textbox1 as the innertext of our <name> element
            address.InnerText = textBox4.Text;

            // L113 make element name a child of element People, so compiler knows where to place it
            person.AppendChild(address);

            
            // L113 add element Person to our document as a child 
            xAddNwNd.DocumentElement.AppendChild(person);
            
            // Not in lesson get path to opened directory, without the filename for saving
            string Sdirpath = Path.GetDirectoryName(Spath);

            // Not in lesson, get filename entered bu user in textBox3
            string sNwFlNm = textBox3.Text;

            // Not in lesson check if the file name has not been entered by the user
            if (string.IsNullOrEmpty(textBox3.Text))
            {
                MessageBox.Show("Enter a Name for your file", "Alert", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
            else
            {
                // display filename of file being saved, and question if the program should save and close or continue.
                DialogResult result = MessageBox.Show("Should this app continue? ", sNwFlNm + ".xml has been saved", MessageBoxButtons.YesNo);


                // If user clicks yes file is save and program continue, if no file is save program is closed
                if (result == DialogResult.No)
                {
                    // L113 save added elements using the path to the directory we opened initially
                    xAddNwNd.Save(Sdirpath + "/" + sNwFlNm + ".xml");

                    // close our app
                    this.Close();
                }
                else
                {
                    // L113 save added elements using the path to the directory we opened initially
                    xAddNwNd.Save(Sdirpath + "/" + sNwFlNm + ".xml");
                }
                
            }
            
        }



        private void button6_Click(object sender, EventArgs e)
        {
            try
            { 
                // L114 add new xml document for adding new nodes
                XmlDocument AddNwNd = new XmlDocument();

                // L114 open static path to xml file from directory example
                //AddNwNd.Load("C:\\users\\*.xml");

                // Not in lesson; open existing xml file from selected directory
                AddNwNd.Load(Spath);

                // L114 iterate through the opened documents node path, to find the first 
                // <People>'s <Name> node within, to delete it
                foreach (XmlNode xmlNode in AddNwNd.SelectNodes("People/Person"))

                    // L114 remove all nodes within Person node using innertext of <Name> to target them
                    // the empty <Person> node will still remain there, after it is saved
                    //if (xmlNode.SelectSingleNode("Name").InnerText == textBox1.Text) xmlNode.RemoveAll();

                    // L114 remove all nodes including Person node and its child nodes using innertext of <Age> to target them
                    // the empty <Person> node will still remain there, after it is saved
                    if (xmlNode.SelectSingleNode("Name").InnerText == textBox5.Text) xmlNode.ParentNode.RemoveChild(xmlNode);
                  

                // L114 save added elements using the static path to the directory example
                //AddNwNd.Save("C:\\users\\*.xml");

                // ****************************** Save Edited Changes***********************************

                // Not in lesson get path to opened directory, without the filename for saving
                string Sdirpath = Path.GetDirectoryName(Spath);

                // Not in lesson, get filename entered buy user in textBox3
                string sNwFlNm = textBox3.Text;

                // Not in lesson check if the file name has not been entered by the user
                if (string.IsNullOrEmpty(textBox3.Text))
                {
                    MessageBox.Show("Enter a Name for your file", "Alert", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }
                else
                {
                    // display filename of file being saved, and question if the program should save and close or continue.
                    DialogResult result = MessageBox.Show("Should this app continue? ", sNwFlNm + ".xml has been saved", MessageBoxButtons.YesNo);


                    // If user clicks yes file is save and program continue, if no file is save program is closed
                    if (result == DialogResult.No)
                    {
                        // L113 save added elements using the path to the directory we opened initially
                        AddNwNd.Save(Sdirpath + "/" + sNwFlNm + ".xml");

                        // close our app
                        this.Close();
                    }
                    else
                    {
                        // L113 save added elements using the path to the directory we opened initially
                        AddNwNd.Save(Sdirpath + "/" + sNwFlNm + ".xml");
                    }
                }
            }
            catch (Exception)
            {
                MessageBox.Show("an error has occured");
            }
        }
    }
}
