using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;

namespace theNewBoston_Beginner_Tutorial_C_sharp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        // L111 make xmlDocument document
        XmlDocument Ixmld;

        string Spath;
        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                // L109 open file dialog to select xml file
                OpenFileDialog Iofd = new OpenFileDialog();

                // L109 filter to only open xml file
                Iofd.Filter = "XML|*.xml";
                if (Iofd.ShowDialog() == DialogResult.OK)
                {
                    // L111 set path equal to openFialogs' path
                    Spath = Iofd.FileName;

                    // L111 make instance of our document, xmlDocument class
                    Ixmld = new XmlDocument();

                    // L111 us load method to open, passed in, filename or url
                    Ixmld.Load(Spath);

                    // L110 read the contents of a single line in the file
                    // the path to name is "People/Person/name, diplayed in textBox1
                    textBox1.Text = Ixmld.SelectSingleNode("People/Person/Name").InnerText;

                    // L110 path to age, displayed in numericalUpDown box
                    numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText;

                    // the path to Email is "People/Person/name, diplayed in textBox2
                    textBox2.Text = Ixmld.SelectSingleNode("People/Person/Email").InnerText;

                }
            }
            catch (Exception)
            {
                MessageBox.Show("an error has occured");
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            // L111 set our three properties up to save them
            Ixmld.SelectSingleNode("People/Person/Name").InnerText = textBox1.Text;

            // L111 numericUpDown is a decinal and must be set to string for saving
            Ixmld.SelectSingleNode("People/Person/Age").InnerText = numericUpDown1.Text.ToString();

            Ixmld.SelectSingleNode("People/Person/Email").InnerText = textBox2.Text;

            // L111 save method, dependency is the path to the file
            Ixmld.Save(Spath);

            /* not in lesson, show saved items in message box
            MessageBox.Show((Ixmld.SelectSingleNode("People/Person/Name").InnerText) + "\r\n" +
                (numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText) + "\r\n" + 
                (Ixmld.SelectSingleNode("People/Person/Email").InnerText = textBox2.Text) + "\r\n", "SAVED");
            */
            // not in lesson; displays items saved,  yes/no messagebox continue program or close?
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            DialogResult result = MessageBox.Show((Ixmld.SelectSingleNode("People/Person/Name").InnerText) + "\r\n" +
                (numericUpDown1.Text = Ixmld.SelectSingleNode("People/Person/Age").InnerText) + "\r\n" +
                (Ixmld.SelectSingleNode("People/Person/Email").InnerText = textBox2.Text) + "\r\n\r\nClose the Prgram?", "SAVED", buttons);
            if (result == DialogResult.Yes)
            {
                this.Close();
            }
            else
            {
                // Do nothing  
            }
        }
        // not in lesson; add a numeric value to default name of created xml file
        int iNameNum = 0;
        private void button3_Click(object sender, EventArgs e)
        {
            // L112 instance of xmlWriter, pass in test xml file path
            XmlTextWriter IxmlTxtWrtr = new XmlTextWriter("C:\\Users\\Roddy\\Documents\\VS Test folder\\new" +iNameNum.ToString() + ".xml", Encoding.UTF8);

            // L112 format our xml so elements are on separate lines
            IxmlTxtWrtr.Formatting = Formatting.Indented;

            // L112 write the start element using the instance we created, first element in our xml tree
            IxmlTxtWrtr.WriteStartElement("People");

            // L112 write the second start element using the instance we created, second element in our xml tree
            IxmlTxtWrtr.WriteStartElement("Person");

            // L112 write the next start element using the instance we created, third element in our xml tree
            IxmlTxtWrtr.WriteStartElement("Name");

            // L112 write the data in the Name element to string and display in textobox1 (the name field)
            IxmlTxtWrtr.WriteString(textBox1.Text);

            // L112 close off string write <name><Person><People?, by ending all of them
            IxmlTxtWrtr.WriteEndElement(); // closes Name

            // L112 write the Age start element, write text to it from numericalUpDown1, close age
            IxmlTxtWrtr.WriteStartElement("Age");
            IxmlTxtWrtr.WriteString(numericUpDown1.Value.ToString());
            IxmlTxtWrtr.WriteEndElement(); // closes Age

            // L112 write the Email start element, write text to it from textBox2, close Email
            IxmlTxtWrtr.WriteStartElement("Email");
            IxmlTxtWrtr.WriteString(textBox2.Text);
            IxmlTxtWrtr.WriteEndElement(); // closes Email

            // L112 close off string write <Person><People?, by ending all of them
            IxmlTxtWrtr.WriteEndElement(); // closes Person
            IxmlTxtWrtr.WriteEndElement(); // closes People

            // L112 close our instance of the xml writer
            IxmlTxtWrtr.Close();

            // not in lesson; displays items saved,  yes/no messagebox continue program or close?
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            DialogResult result = MessageBox.Show( "file new" + iNameNum.ToString() + ".xml\r\n\r\nClose the Program?", "Created", buttons);
            if (result == DialogResult.Yes)
            {
                // close our app
                this.Close();
            }
            else
            {
                // increment created xml doc name by 1
                iNameNum++;
                textBox1.Text = "";
                numericUpDown1.Value = 0;
                textBox2.Text = "";
            }
        }
    }
}
