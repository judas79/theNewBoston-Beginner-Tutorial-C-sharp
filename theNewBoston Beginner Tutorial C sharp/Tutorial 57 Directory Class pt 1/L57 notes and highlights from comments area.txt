For this lesson we will need button1 to learn about the Directory class.  We will need and instance for  FolderBrowserDialog and a way
to check if the path was correctly implimented, from the previous tutorial.


			// L56 instance of FolderBrowserDialog
            FolderBrowserDialog IFBD = new FolderBrowserDialog();

            // L56 check 'if' the instance makes the path
            if (IFBD.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                MessageBox.Show("IFBD Functional");


Next, in the body of the if statement we will use the class 'Directory' to create a string array, that will store the path or paths
or all the indvidual files, that are within the folder, that was opend.  We will then use a foreach statement to display the paths
stored in the the string array.


				// L57 Directory class, get paths for individual files for string array
                string[] saFiles = Directory.GetFiles(IFBD.SelectedPath);

                // L57 display file paths in array sFiles using foreach statement
                foreach (string sEachFile in saFiles)
                {
                    MessageBox.Show(sEachFile);
                    label1.Text += sEachFile + "\nPath:  ";
                    textBox1.Text += "Path:  :" + sEachFile + "  ";
                }


We can use the same structure with GetDirectories as we did with the GetFiles properties, to get directories, within a directory:


                // L57 Directory class, get paths for individual files for string array
                string[] saDirectoriess = Directory.GetDirectories(IFBD.SelectedPath);

                // L57 display file paths in array sFiles using foreach statement
                foreach (string sEachDirectory in saDirectoriess)
                {
                    MessageBox.Show(sEachDirectory, "Directorie(s)");
                    label1.Text += "\nDirectory Path:  " + sEachDirectory;
                    textBox1.Clear();
                    textBox1.Text += "Directory Path:  :" + sEachDirectory + "  ";
                    
                }



We can also get the drive letters for hard drives, optical drives and USB drives, on the local computer with GetLogicalDrives:


				string[] saLogicalDrives = Directory.GetLogicalDrives();
                foreach(string sDrive in saLogicalDrives)
                {
                    MessageBox.Show(sDrive, "Drive");
                    label1.Text += "\nDrive Path:  " + sDrive;
                    textBox1.Clear();
                    textBox1.Text += "Drive Path:  :" + sDrive + "  ";
                }






****************** highlights from the comments area ******************






No comments