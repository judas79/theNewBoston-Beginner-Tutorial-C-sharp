using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace theNewBoston_Beginner_Tutorial_C_sharp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }


        private void button1_Click(object sender, EventArgs e)
        {
            // L101 create new treeNode;
            TreeNode Itn0 = new TreeNode();
            // set text in Node 0 to Person
            Itn0.Text = "People";
            // set image index to number in imagelist index #
            Itn0.ImageIndex = 3;
            // pass the tree node to treeView1
            treeView1.Nodes.Add(Itn0);
            // make selected image the same as the unselected image
            Itn0.SelectedImageIndex = 3;

            // L101 Another treeNode
            // L101 create new treeNode;
            TreeNode Itn1 = new TreeNode();
            // set text in Node 0 to Animal
            Itn1.Text = "Animals";
            // set image index to number in imagelist index #
            Itn1.ImageIndex = 0;
            // pass the tree node to treeView1
            treeView1.Nodes.Add(Itn1);
            // make selected image the same as the unselected image
            Itn1.SelectedImageIndex = 0;

            // L101 sub node insects, for animals
            // L101 create new treeNode;
            TreeNode Itn2 = new TreeNode();
            // set text in Node 0 to Animal
            Itn2.Text = "Insects";
            // set image index to number in imagelist index #
            Itn2.ImageIndex = 2;
            // pass the tree node to treeView1
            treeView1.Nodes[1].Nodes.Add(Itn2);
            // make selected image the same as the unselected image
            Itn2.SelectedImageIndex = 2;

            // L101 sub node dragonfly, for insects
            // L101 create new treeNode;
            TreeNode Itn3 = new TreeNode();
            // set text in Node 0 to Animal
            Itn3.Text = "Insects";
            // set image index to number in imagelist index #
            Itn3.ImageIndex = 1;
            // pass the tree node to treeView1
            treeView1.Nodes[1].Nodes[0].Nodes.Add(Itn3);
            // make selected image the same as the unselected image
            Itn2.SelectedImageIndex = 1;

            /*
            // L99 create the first node in treeView1
            treeView1.Nodes.Add("People");
            // sub nodes for this node
            treeView1.Nodes[0].Nodes.Add("Doug");
            treeView1.Nodes[0].Nodes.Add("Oscar");
            // sub node to a sub node to a node
            treeView1.Nodes[0].Nodes[1].Nodes.Add("Oscar balls");
            treeView1.Nodes[0].Nodes.Add("George");

            // L99 add more nodes
            treeView1.Nodes.Add("Animals");
            // sub nodes for this node
            treeView1.Nodes[1].Nodes.Add("Bob");
            treeView1.Nodes[1].Nodes.Add("Rex");

            treeView1.Nodes.Add("Insects");
            // sub nodes for this node
            treeView1.Nodes[2].Nodes.Add("flee");
            // sub node to a sub node to a node
            treeView1.Nodes[2].Nodes[0].Nodes.Add("flee balls");
            */
        }

        private void treeView1_AfterSelect(object sender, TreeViewEventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            // L100 use selectedNode to remove a node from form1
            //treeView1.SelectedNode.Remove();

            // clear all nodes from form
            //treeView1.Nodes.Clear();

            // L100 remove all checked nodes using removeCheckedNodes method
            removeCheckedNodes(treeView1.Nodes);
        }

        // L100 list to add checked items to be removed
        List<TreeNode> tnList = new List<TreeNode>();

        // L100 method to remove checked nodes from form1
        // uses iteration of TreeNodeCollection
        void removeCheckedNodes(TreeNodeCollection tnc)
        {
            // L100 this will get the main nodes but no the sub nodes
            foreach (TreeNode tn in tnc)
            {
                if (tn.Checked)
                {
                    // L100 add the checked items in ITNC to the list
                    tnList.Add(tn);
                }
                // L100 this will get the sub nodes if they exist by checking the count
                else if (tn.Nodes.Count != 0)
                {
                    removeCheckedNodes(tn.Nodes);
                }
            }

            foreach (TreeNode tn in tnList)
            {
                    treeView1.Nodes.Remove(tn);
            }
        }
    }
}


